#!/usr/bin/env python
# coding: utf-8

#  # Q )
#  
#  어떤 나라에 N개의 도시가 있다. 이 도시들은 일직선 도로 위에 있다. 편의상 일직선을 수평 방향으로 두자. 제일 왼쪽의 도시에서 제일 오른쪽의 도시로 자동차를 이용하여 이동하려고 한다. 인접한 두 도시 사이의 도로들은 서로 길이가 다를 수 있다. 도로 길이의 단위는 km를 사용한다.
# 
# 처음 출발할 때 자동차에는 기름이 없어서 주유소에서 기름을 넣고 출발하여야 한다. 기름통의 크기는 무제한이어서 얼마든지 많은 기름을 넣을 수 있다. 도로를 이용하여 이동할 때 1km마다 1리터의 기름을 사용한다. 각 도시에는 단 하나의 주유소가 있으며, 도시 마다 주유소의 리터당 가격은 다를 수 있다. 가격의 단위는 원을 사용한다.
# 
# 예를 들어, 이 나라에 다음 그림처럼 4개의 도시가 있다고 하자. 원 안에 있는 숫자는 그 도시에 있는 주유소의 리터당 가격이다. 도로 위에 있는 숫자는 도로의 길이를 표시한 것이다. 

#  # A ) 
#  
#  
#  1) 도시의 개수와 도로의 길이, 주유소의 리터당 가격을 각각 n, road, cost로 입력 받는다. 
#  2) 첫번째 도시에서는 무조건 주유를 해야된다 (예외조건) 
#  3) 첫번째에서 두번째 도시로 가는 도로의 길이* 첫번째 도시에서 리터당 가격을 더한다 
#  4) for 문을 돌면서 min값 보다 작으면 * 가장 작았던 주유 가격을 곱해서 결과에 더해준다 
# 
#  

# In[1]:


n = int(input())
road = list(map(int,input().split()))
cost = list(map(int,input().split()))

res = road[0]*cost[0]
min_cost = cost[0]
d = 0 

for i in range(1,n-1): #처음과 마지막은 제외해야되니까 
    if cost[i] < min_cost : # 새로 만난 가격이 기존의 최소 가격보다 작을 때  
        res += min_cost*d 
        d = road[i]
        min_cost = cost[i]
        
    else: 
        d += road[i]
    
    if i == n-2 :
        res += min_cost*d 
        
    
print(res)

